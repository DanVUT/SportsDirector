<Page x:Class="MFormat.View.HiglightsList"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MFormat.View"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:cmd= "http://www.galasoft.ch/mvvmlight"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="HiglightsList"
      DataContext="{Binding Source={StaticResource Locator}, Path=highlightsListViewModel}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <ListBox Grid.Row="0" Grid.Column="0" x:Name="highlightsList" ItemsSource="{Binding ActionsList}" SelectedItem="{Binding SelectedAction}" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" PreviewMouseWheel="highlightsList_PreviewMouseWheel">

            <ListBox.ItemTemplate>
                <DataTemplate DataType="HighlightsListTemplate">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="100"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Source="{Binding thumbnail}" Height="99" Width="176"/>
                        <TextBlock Grid.Column="1" Text="{Binding name}" VerticalAlignment="Center" TextTrimming="WordEllipsis"></TextBlock>
                        <Button Grid.Column="2" Content="Delete" Command="{Binding DataContext.DeleteHighlightCommand, RelativeSource={RelativeSource AncestorType=Page, AncestorLevel=1}}" CommandParameter="{Binding}" Margin="5 0 5 0"></Button>
                        <Button Grid.Column="3" Content="Broadcast" Command="{Binding DataContext.BroadcastHighlightCommand, RelativeSource={RelativeSource AncestorType=Page, AncestorLevel=1}}" CommandParameter="{Binding}"></Button>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
            
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            
        </ListBox>

        <StackPanel Grid.Row="0" Grid.Column="1" Margin="10 10 10 0">
            
            <Image x:Name="preview" HorizontalAlignment="Center" Stretch="Fill" MaxHeight="252" MaxWidth="448" >
                <Image.Source>
                    <Binding Path="PreviewSource" >
                        <Binding.TargetNullValue>
                            <BitmapImage UriSource="/Static/Blackbackground.jpg" />
                        </Binding.TargetNullValue>
                    </Binding>
                </Image.Source>
                <i:Interaction.Triggers>
                    <i:EventTrigger i:EventName="MouseLeftButtonDown">
                        <cmd:EventToCommand Command="{Binding Mode=OneWay, Path=LeftClickButtonCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
            
            <StackPanel Orientation="Horizontal" Margin="10">
                <Label>Name </Label>
                <TextBox x:Name="actionName" Text="{Binding SelectedAction.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="150" MaxWidth="150" VerticalContentAlignment="Center" Margin="0 0 15 0" IsEnabled="{Binding EnableGuiElements}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding NameChangedCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Label>Start (before time created)</Label>
                <xctk:IntegerUpDown x:Name="startTime" Value="{Binding SelectedAction.before, Mode=TwoWay}" MinWidth="75" Margin="15 0 15 0" Minimum="0" Increment="1" IsEnabled="{Binding EnableGuiElements}" PreviewMouseWheel="UpDownPreviewMouseWheel">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding BeforeChangedCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:IntegerUpDown>

                <Label>End (after time created)</Label>
                <xctk:IntegerUpDown x:Name="endTime" Value="{Binding SelectedAction.after, Mode=TwoWay}" MinWidth="75" Margin="15 0 15 0" Increment="1" IsEnabled="{Binding EnableGuiElements}" PreviewMouseWheel="UpDownPreviewMouseWheel">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding AfterChangedCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:IntegerUpDown>
            </StackPanel>
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Button Height="30" x:Name="playButton" Content="Play" Command="{Binding PlayHighlightPreviewCommand}" Margin="0 0 5 0" IsEnabled="{Binding EnableGuiElements}"></Button>
                <Button Height="30" x:Name="stopButton" Grid.Column="1" Content="Stop" Command="{Binding StopHiglightPreviewCommand}" IsEnabled="{Binding EnableGuiElements}"></Button>
            </Grid>

        </StackPanel>
    </Grid>
</Page>
